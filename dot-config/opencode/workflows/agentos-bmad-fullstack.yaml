# AgentOS-Enhanced BMad Fullstack Workflow

name: "AgentOS-Enhanced BMad Fullstack Development"
description: "Comprehensive fullstack development workflow integrating BMad methodology with AgentOS context engineering and quality gates"
version: "1.0"
context_layers:
  standards: ["bmad", "coding", "security", "performance"]
  products: ["web-apps"]
  specs: ["conditional:project_context"]

phases:
  - name: "Context Discovery & Standards Alignment"
    description: "Establish project context and align with organizational standards"
    agents: 
      - "@context-primer"
      - "@context-optimizer" 
      - "@standards-checker"
    inputs: []
    outputs: 
      - "project_context.md"
      - "standards_alignment.md"
      - "context_optimization_report.md"
    quality_gates:
      - "context_relevance"
      - "standards_compliance"
    tasks:
      - "Analyze existing project structure and context"
      - "Detect project type and load appropriate context"
      - "Validate alignment with organizational standards"
      - "Optimize context loading for efficiency"

  - name: "Spec-Driven Requirements Elicitation"
    description: "Gather and analyze requirements using AgentOS specification framework"
    agents:
      - "@business-analyst"
      - "@spec-analyzer"
      - "@bmad-master"
    inputs:
      - "project_context.md"
      - "standards_alignment.md"
    outputs:
      - "business_requirements_spec.yaml"
      - "stakeholder_analysis.md"
      - "requirements_validation_report.md"
    quality_gates:
      - "spec_completeness"
      - "stakeholder_validation"
      - "bmad_compliance"
    tasks:
      - "Conduct stakeholder interviews and workshops"
      - "Create comprehensive business requirements specification"
      - "Validate requirements against business objectives"
      - "Ensure BMad methodology compliance"

  - name: "Architecture Design with Quality Gates"
    description: "Design system architecture with integrated quality validation"
    agents:
      - "@system-architect"
      - "@quality-enforcer"
      - "@security-specialist"
    inputs:
      - "business_requirements_spec.yaml"
      - "standards_alignment.md"
    outputs:
      - "system_architecture_spec.yaml"
      - "technical_specifications.md"
      - "quality_validation_report.md"
      - "security_assessment.md"
    quality_gates:
      - "architecture_compliance"
      - "security_validation"
      - "performance_requirements"
      - "scalability_assessment"
    tasks:
      - "Design system architecture following established patterns"
      - "Create detailed technical specifications"
      - "Validate security requirements and implementation"
      - "Ensure performance and scalability requirements"

  - name: "UX Design & Frontend Specification"
    description: "Create user experience design with frontend technical specifications"
    agents:
      - "@ux-designer"
      - "@frontend-specialist"
      - "@spec-analyzer"
    inputs:
      - "business_requirements_spec.yaml"
      - "system_architecture_spec.yaml"
    outputs:
      - "ux_design_spec.yaml"
      - "frontend_technical_spec.yaml"
      - "user_flow_documentation.md"
      - "design_system_spec.md"
    quality_gates:
      - "usability_validation"
      - "accessibility_compliance"
      - "design_consistency"
      - "technical_feasibility"
    tasks:
      - "Create user experience design and prototypes"
      - "Develop frontend technical specifications"
      - "Ensure accessibility and usability standards"
      - "Validate design system consistency"

  - name: "Epic & Story Creation"
    description: "Break down requirements into manageable epics and user stories"
    agents:
      - "@product-owner"
      - "@spec-analyzer"
      - "@story-validator"
    inputs:
      - "business_requirements_spec.yaml"
      - "system_architecture_spec.yaml"
      - "ux_design_spec.yaml"
    outputs:
      - "epic_specifications.yaml"
      - "user_stories_backlog.yaml"
      - "story_validation_report.md"
      - "implementation_roadmap.md"
    quality_gates:
      - "story_completeness"
      - "acceptance_criteria_validation"
      - "epic_alignment"
      - "implementation_readiness"
    tasks:
      - "Create comprehensive epic specifications"
      - "Develop detailed user stories with acceptance criteria"
      - "Validate stories against requirements and architecture"
      - "Create implementation roadmap and priorities"

  - name: "Implementation with Continuous Quality"
    description: "Implement features with continuous quality monitoring and validation"
    agents:
      - "@senior-developer"
      - "@quality-enforcer"
      - "@test-automation-specialist"
    inputs:
      - "user_stories_backlog.yaml"
      - "system_architecture_spec.yaml"
      - "frontend_technical_spec.yaml"
    outputs:
      - "implemented_features.md"
      - "test_results.md"
      - "quality_metrics_report.md"
      - "deployment_artifacts.md"
    quality_gates:
      - "code_quality_validation"
      - "test_coverage_requirements"
      - "security_compliance"
      - "performance_benchmarks"
    tasks:
      - "Implement features following specifications"
      - "Execute comprehensive testing strategy"
      - "Validate quality gates and standards compliance"
      - "Prepare deployment artifacts and documentation"

  - name: "Validation & Deployment"
    description: "Final validation and deployment with stakeholder approval"
    agents:
      - "@quality-assurance"
      - "@deployment-specialist"
      - "@stakeholder-validator"
    inputs:
      - "implemented_features.md"
      - "test_results.md"
      - "quality_metrics_report.md"
    outputs:
      - "final_validation_report.md"
      - "deployment_documentation.md"
      - "stakeholder_approval.md"
      - "project_completion_report.md"
    quality_gates:
      - "final_quality_validation"
      - "stakeholder_acceptance"
      - "deployment_readiness"
      - "documentation_completeness"
    tasks:
      - "Execute final quality validation and testing"
      - "Obtain stakeholder approval and sign-off"
      - "Deploy to production environment"
      - "Complete project documentation and handover"

# Quality Gate Definitions
quality_gates:
  context_relevance:
    description: "Ensure loaded context is relevant and optimized"
    criteria: "90% context relevance, 60% token reduction"
    validation: "automated context analysis"
  
  standards_compliance:
    description: "Validate compliance with organizational standards"
    criteria: "100% standards compliance"
    validation: "automated standards checking"
  
  spec_completeness:
    description: "Ensure specifications are complete and accurate"
    criteria: "95% specification completeness"
    validation: "specification analysis and validation"
  
  stakeholder_validation:
    description: "Confirm stakeholder approval and requirements alignment"
    criteria: "90% stakeholder approval"
    validation: "stakeholder review and sign-off"
  
  bmad_compliance:
    description: "Ensure adherence to BMad methodology"
    criteria: "100% BMad methodology compliance"
    validation: "BMad checklist validation"

# Success Metrics
success_metrics:
  quality:
    - "Requirements traceability: 100%"
    - "Defect rate: <5%"
    - "Quality gate pass rate: >90%"
    - "Standards compliance: 100%"
  
  performance:
    - "Development velocity: +25%"
    - "Time to market: -20%"
    - "Context efficiency: 60% token reduction"
    - "Stakeholder satisfaction: >90%"
  
  process:
    - "Workflow completion rate: >95%"
    - "Quality gate automation: 80%"
    - "Documentation completeness: 100%"
    - "Team adoption rate: >85%"