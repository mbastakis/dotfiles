name: "Brownfield Service Development (AgentOS Enhanced)"
description: "AgentOS-enhanced workflow for enhancing existing backend services and APIs with new features, featuring smart context loading and quality gate validation"
agentos_integration: true
context_layers:
  standards: ["bmad", "coding", "performance", "security"]
  products: ["apis"]
  specs: ["conditional:active_project"]

triggers:
  - "Enhancing existing backend service"
  - "Adding features to existing API"
  - "Modernizing legacy service"
  - "Performance optimization of existing service"

agentos_features:
  smart_context_loading: true
  subagent_coordination: true
  quality_gate_automation: true
  spec_driven_development: true

subagents:
  - name: "context-optimizer"
    role: "context_optimization"
    auto_spawn: ["workflow_start", "phase_transitions"]
  - name: "spec-analyzer"
    role: "specification_analysis"
    auto_spawn: ["requirements_analysis", "story_creation"]
  - name: "quality-enforcer"
    role: "quality_validation"
    auto_spawn: ["quality_gates", "deliverable_validation"]

phases:
  - name: "Service Analysis"
    description: "Analyze existing service architecture and constraints"
    tasks:
      - task: "brownfield-create-tech-analysis"
        agent: "system-architect"
        description: "Analyze existing service architecture and integration points"
        inputs:
          - "Existing service codebase"
          - "Current API documentation"
          - "Performance metrics"
          - "Integration dependencies"
        outputs:
          - "Service analysis document"
          - "Integration impact assessment"
          - "Performance baseline"
      
      - task: "advanced-elicitation"
        agent: "business-analyst"
        description: "Gather requirements considering service constraints"
        inputs:
          - "Service analysis"
          - "Business requirements"
          - "Stakeholder feedback"
        outputs:
          - "Detailed requirements"
          - "Service enhancement scope"
          - "Constraint analysis"

  - name: "Planning & Design"
    description: "Plan service enhancements within existing architecture"
    tasks:
      - task: "brownfield-create-epic"
        agent: "product-manager"
        description: "Create epic for service enhancement"
        inputs:
          - "Service analysis"
          - "Requirements document"
          - "Business objectives"
        outputs:
          - "Epic document"
          - "Service enhancement plan"
          - "Success criteria"

  - name: "Story Development"
    description: "Create implementable stories for service enhancement"
    tasks:
      - task: "brownfield-create-story"
        agent: "product-owner"
        description: "Create stories for service features"
        inputs:
          - "Epic document"
          - "Service analysis"
          - "API specifications"
        outputs:
          - "User stories"
          - "API change specifications"
          - "Story estimates"
      
      - task: "validate-story"
        agent: "quality-assurance"
        description: "Validate stories against service capabilities"
        inputs:
          - "User stories"
          - "Service constraints"
          - "Testing framework"
        outputs:
          - "Validated stories"
          - "Service test strategy"
          - "Quality criteria"

  - name: "Implementation"
    description: "Implement service enhancements"
    tasks:
      - task: "execute-checklist"
        agent: "senior-developer"
        description: "Implement service enhancements"
        inputs:
          - "Validated stories"
          - "Service architecture"
          - "API standards"
        outputs:
          - "Enhanced service"
          - "Updated API documentation"
          - "Service tests"

quality_gates:
  - name: "Service Analysis Review (AgentOS Enhanced)"
    description: "Ensure service enhancement approach is sound with AgentOS validation"
    checklist: "architect-checklist"
    required_approvers: ["system-architect", "senior-developer"]
    agentos_validation:
      - "standards_compliance"
      - "spec_alignment"
      - "context_optimization"
  
  - name: "Epic Approval (AgentOS Enhanced)"
    description: "Confirm epic aligns with service strategy with AgentOS validation"
    checklist: "pm-checklist"
    required_approvers: ["product-manager", "product-owner"]
    agentos_validation:
      - "bmad_validation"
      - "spec_alignment"
  
  - name: "Story Validation (AgentOS Enhanced)"
    description: "Ensure stories are ready for service development with AgentOS validation"
    checklist: "story-dod-checklist"
    required_approvers: ["product-owner", "quality-assurance"]
    agentos_validation:
      - "standards_compliance"
      - "bmad_validation"
      - "context_optimization"

success_criteria:
  - "Service enhancements integrate seamlessly"
  - "API backward compatibility maintained"
  - "Performance meets or exceeds benchmarks"
  - "All stories meet definition of done"
  - "Service documentation updated"
  - "AgentOS quality gates passed (90% threshold)"
  - "Context optimization achieved (60% token reduction)"
  - "Subagent coordination effective"

team_composition:
  required:
    - "system-architect"
    - "business-analyst"
    - "product-manager"
    - "product-owner"
    - "senior-developer"
    - "quality-assurance"
  optional:
    - "scrum-master"

estimated_duration: "3-6 weeks"
complexity: "medium"