name: "Brownfield Fullstack Development (AgentOS Enhanced)"
description: "Complete workflow for developing new features in existing fullstack applications with AgentOS context engineering, smart loading, and automated quality gates"
version: "2.0"
agentos_integration: true
context_layers:
  standards: ["bmad", "coding", "security", "performance"]
  products: ["web-apps"]
  specs: ["conditional:project_context"]

triggers:
  - "Working on existing fullstack application"
  - "Adding features to established codebase"
  - "Enhancing existing web application"

phases:
  - name: "Context Discovery & Standards Alignment"
    description: "Establish project context and align with organizational standards using AgentOS"
    agents: 
      - "@context-primer"
      - "@context-optimizer" 
      - "@quality-enforcer"
    context_loading:
      - "standards/bmad/methodology-lite.md"
      - "products/web-apps/patterns.md"
      - "context/conditions/project-detection.yaml"
    quality_gates:
      - "context_relevance"
      - "standards_compliance"
    tasks:
      - task: "agentos-context-discovery"
        agent: "context-primer"
        description: "Analyze existing project structure and establish AgentOS context"
        inputs:
          - "Existing codebase"
          - "Current architecture documentation"
        outputs:
          - "project_context.md"
          - "context_optimization_report.md"
      
      - task: "standards-alignment-validation"
        agent: "quality-enforcer"
        description: "Validate alignment with organizational standards"
        inputs:
          - "project_context.md"
        outputs:
          - "standards_alignment.md"
          - "compliance_report.md"

  - name: "Discovery & Analysis (AgentOS Enhanced)"
    description: "Understand existing system and requirements with smart context loading"
    context_loading:
      - "conditional:existing_architecture_context"
      - "standards/security/secure-coding.md"
      - "standards/performance/optimization.md"
    tasks:
      - task: "brownfield-create-tech-analysis"
        agent: "system-architect"
        subagents: ["@quality-enforcer", "@spec-analyzer"]
        description: "Analyze existing architecture with AgentOS quality validation"
        context_check: "architecture-standards"
        inputs:
          - "project_context.md"
          - "standards_alignment.md"
          - "Existing codebase"
          - "Current architecture documentation"
          - "Feature requirements"
        outputs:
          - "technical_analysis_spec.yaml"
          - "integration_plan.md"
          - "risk_assessment.md"
          - "quality_validation_report.md"
        quality_gates:
          - "architecture_compliance"
          - "security_validation"
          - "performance_requirements"
      
      - task: "advanced-elicitation"
        agent: "business-analyst"
        subagents: ["@spec-analyzer", "@context-optimizer"]
        description: "Gather detailed requirements using AgentOS specification framework"
        context_check: "bmad-methodology"
        inputs:
          - "technical_analysis_spec.yaml"
          - "Stakeholder list"
          - "Existing system documentation"
          - "Business objectives"
        outputs:
          - "business_requirements_spec.yaml"
          - "constraint_analysis.md"
          - "stakeholder_validation_report.md"
        quality_gates:
          - "spec_completeness"
          - "stakeholder_validation"
          - "bmad_compliance"

  - name: "Planning & Design (AgentOS Enhanced)"
    description: "Plan implementation with AgentOS specification framework and quality gates"
    context_loading:
      - "conditional:product_context"
      - "specs/templates/agentos-spec-template.yaml"
    quality_gates:
      - "spec_alignment"
      - "design_consistency"
      - "technical_feasibility"
    tasks:
      - task: "brownfield-create-epic"
        agent: "product-manager"
        subagents: ["@spec-analyzer", "@quality-enforcer"]
        description: "Create epic using AgentOS specification framework"
        context_check: "product-strategy"
        inputs:
          - "business_requirements_spec.yaml"
          - "technical_analysis_spec.yaml"
          - "Product roadmap"
        outputs:
          - "epic_specification.yaml"
          - "feature_specification.yaml"
          - "success_criteria.md"
          - "stakeholder_approval.md"
        quality_gates:
          - "business_alignment"
          - "spec_completeness"
          - "stakeholder_validation"
      
      - task: "greenfield-create-ux-wireframes"
        agent: "ux-designer"
        description: "Design UX that integrates with existing interface"
        inputs:
          - "Epic document"
          - "Existing design system"
          - "User research"
        outputs:
          - "Wireframes"
          - "User flow diagrams"
          - "Design specifications"

  - name: "Story Development"
    description: "Break down epic into implementable stories"
    tasks:
      - task: "brownfield-create-story"
        agent: "product-owner"
        description: "Create stories that work within existing architecture"
        inputs:
          - "Epic document"
          - "Technical analysis"
          - "Wireframes"
        outputs:
          - "User stories"
          - "Acceptance criteria"
          - "Story estimates"
      
      - task: "validate-story"
        agent: "quality-assurance"
        description: "Validate stories against existing system capabilities"
        inputs:
          - "User stories"
          - "Technical constraints"
          - "Testing framework"
        outputs:
          - "Validated stories"
          - "Test strategy"
          - "Quality criteria"

  - name: "Implementation"
    description: "Develop and integrate new features"
    tasks:
      - task: "execute-checklist"
        agent: "senior-developer"
        description: "Implement stories following development standards"
        inputs:
          - "Validated stories"
          - "Technical specifications"
          - "Coding standards"
        outputs:
          - "Implemented features"
          - "Unit tests"
          - "Integration tests"

quality_gates:
  # AgentOS Quality Gates
  - name: "Context Relevance Gate"
    description: "Ensure loaded context is relevant and optimized"
    criteria: "90% context relevance, 60% token reduction"
    validation: "automated context analysis"
    validator: "@context-optimizer"
  
  - name: "Standards Compliance Gate"
    description: "Validate compliance with organizational standards"
    criteria: "100% standards compliance"
    validation: "automated standards checking"
    validator: "@quality-enforcer"
    checklist: "standards-compliance"
  
  - name: "Specification Alignment Gate"
    description: "Ensure deliverables match specifications"
    criteria: "95% specification completeness"
    validation: "specification analysis and validation"
    validator: "@spec-analyzer"
  
  # Enhanced BMad Quality Gates
  - name: "Technical Analysis Review (AgentOS Enhanced)"
    description: "Ensure technical approach is sound with automated validation"
    checklist: "architect-checklist"
    required_approvers: ["system-architect", "senior-developer"]
    automated_validation: ["architecture_compliance", "security_validation", "performance_requirements"]
    validator: "@quality-enforcer"
  
  - name: "Epic Approval (AgentOS Enhanced)"
    description: "Confirm epic aligns with product strategy and specifications"
    checklist: "pm-checklist"
    required_approvers: ["product-manager", "product-owner"]
    automated_validation: ["business_alignment", "spec_completeness", "stakeholder_validation"]
    validator: "@quality-enforcer"
  
  - name: "Story Validation (AgentOS Enhanced)"
    description: "Ensure stories are ready for development with quality validation"
    checklist: "story-dod-checklist"
    required_approvers: ["product-owner", "quality-assurance"]
    automated_validation: ["story_completeness", "acceptance_criteria_validation", "implementation_readiness"]
    validator: "@quality-enforcer"

success_criteria:
  # Traditional BMad Success Criteria
  - "All stories meet definition of done"
  - "Features integrate seamlessly with existing system"
  - "No regression in existing functionality"
  - "Performance meets or exceeds current benchmarks"
  - "Security standards maintained"
  
  # AgentOS Success Criteria
  - "Context efficiency: 60% token reduction achieved"
  - "Context relevance: 90% relevance threshold maintained"
  - "Quality gate pass rate: >90% on first attempt"
  - "Standards compliance: 100% automated validation passed"
  - "Specification alignment: 95% deliverable-spec alignment"
  - "Subagent coordination: Optimal performance and collaboration"

# AgentOS Performance Metrics
performance_metrics:
  context_efficiency:
    token_reduction_target: 60
    relevance_threshold: 90
    loading_time_target: "<2s"
  
  quality_metrics:
    gate_pass_rate_target: 90
    compliance_score_target: 100
    defect_reduction_target: 50
  
  agent_coordination:
    subagent_utilization_target: 85
    coordination_efficiency_target: 90
    workflow_completion_target: 95

team_composition:
  required:
    - "system-architect"
    - "business-analyst"
    - "product-manager"
    - "product-owner"
    - "senior-developer"
    - "ux-designer"
    - "quality-assurance"
  optional:
    - "scrum-master"

estimated_duration: "4-8 weeks"
complexity: "medium-high"