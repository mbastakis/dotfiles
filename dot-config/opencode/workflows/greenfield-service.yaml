name: "Greenfield Service Development (AgentOS Enhanced)"
description: "AgentOS-enhanced complete workflow for building new backend services and APIs from scratch, featuring smart context loading and quality gate validation"
agentos_integration: true
context_layers:
  standards: ["bmad", "coding", "security", "performance", "documentation"]
  products: ["apis"]
  specs: ["conditional:active_project"]

triggers:
  - "Building new backend service"
  - "Creating new API from scratch"
  - "Developing new microservice"
  - "Building REST or GraphQL API"

agentos_features:
  smart_context_loading: true
  subagent_coordination: true
  quality_gate_automation: true
  spec_driven_development: true

subagents:
  - name: "context-optimizer"
    role: "context_optimization"
    auto_spawn: ["workflow_start", "phase_transitions"]
  - name: "spec-analyzer"
    role: "specification_analysis"
    auto_spawn: ["requirements_analysis", "story_creation"]
  - name: "quality-enforcer"
    role: "quality_validation"
    auto_spawn: ["quality_gates", "deliverable_validation"]

phases:
  - name: "Project Initiation"
    description: "Define service scope and create initial documentation"
    tasks:
      - task: "greenfield-create-project-brief"
        agent: "business-analyst"
        description: "Create comprehensive project brief for service"
        inputs:
          - "Business requirements"
          - "Service objectives"
          - "Stakeholder input"
        outputs:
          - "Project brief"
          - "Service scope"
          - "Success metrics"
      
      - task: "advanced-elicitation"
        agent: "business-analyst"
        description: "Conduct thorough requirements gathering for service"
        inputs:
          - "Project brief"
          - "Stakeholder list"
          - "Business objectives"
        outputs:
          - "Detailed requirements"
          - "API specifications"
          - "Business rules"

  - name: "Service Design"
    description: "Design service architecture and API specifications"
    tasks:
      - task: "greenfield-create-architecture"
        agent: "system-architect"
        description: "Design complete service architecture"
        inputs:
          - "Project brief"
          - "Requirements document"
          - "Technical constraints"
        outputs:
          - "Service architecture"
          - "API design"
          - "Data model"
      
      - task: "greenfield-create-epic"
        agent: "product-manager"
        description: "Create epics for service features"
        inputs:
          - "Architecture document"
          - "Requirements document"
          - "Project brief"
        outputs:
          - "Epic documents"
          - "Feature roadmap"
          - "Release plan"

  - name: "Story Development"
    description: "Create detailed user stories for service development"
    tasks:
      - task: "greenfield-create-story"
        agent: "product-owner"
        description: "Create detailed service stories"
        inputs:
          - "Epic documents"
          - "Architecture document"
          - "API specifications"
        outputs:
          - "User stories"
          - "API endpoint specifications"
          - "Story estimates"
      
      - task: "validate-story"
        agent: "quality-assurance"
        description: "Validate stories for service completeness"
        inputs:
          - "User stories"
          - "Architecture document"
          - "Quality standards"
        outputs:
          - "Validated stories"
          - "API test strategy"
          - "Quality plan"

  - name: "Implementation"
    description: "Develop and test the service"
    tasks:
      - task: "execute-checklist"
        agent: "senior-developer"
        description: "Implement service following best practices"
        inputs:
          - "Validated stories"
          - "Architecture document"
          - "API specifications"
        outputs:
          - "Service implementation"
          - "API documentation"
          - "Service tests"

quality_gates:
  - name: "Project Brief Approval"
    description: "Ensure service project is viable and well-defined"
    checklist: "pm-checklist"
    required_approvers: ["product-manager", "business-analyst"]
  
  - name: "Architecture Review"
    description: "Validate service architecture"
    checklist: "architect-checklist"
    required_approvers: ["system-architect", "senior-developer"]
  
  - name: "Epic Validation"
    description: "Confirm epics support service goals"
    checklist: "pm-checklist"
    required_approvers: ["product-manager", "product-owner"]
  
  - name: "Story Readiness"
    description: "Ensure stories are ready for service development"
    checklist: "story-dod-checklist"
    required_approvers: ["product-owner", "quality-assurance"]

success_criteria:
  - "All service objectives met"
  - "API design follows best practices"
  - "Service architecture supports scalability"
  - "All stories meet definition of done"
  - "Performance benchmarks achieved"
  - "Security requirements satisfied"

team_composition:
  required:
    - "business-analyst"
    - "system-architect"
    - "product-manager"
    - "product-owner"
    - "senior-developer"
    - "quality-assurance"
  optional:
    - "scrum-master"

estimated_duration: "6-12 weeks"
complexity: "medium-high"