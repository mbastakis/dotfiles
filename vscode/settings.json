{
  // THEMES
  // ----------------------------------------------------------------------
  // ----------------------------------------------------------------------
  // UI Themes
  "workbench.colorTheme": "Vesper",
  "workbench.iconTheme": "material-icon-theme",
  // UI Editor
  "workbench.editor.showTabs": "single",
  "workbench.sideBar.location": "right",
  "workbench.activityBar.location": "top",
  "workbench.startupEditor": "none",
  "workbench.statusBar.visible": false,
  "workbench.tips.enabled": false,
  "editor.minimap.enabled": false,
  "breadcrumbs.enabled": false,
  "material-icon-theme.hidesExplorerArrows": true,
  "workbench.tree.enableStickyScroll": true,
  "workbench.tree.renderIndentGuides": "always",
  "workbench.tree.indent": 8,
  "explorer.autoReveal": false,
  "explorer.compactFolders": false,
  "explorer.confirmDragAndDrop": false,
  "explorer.confirmDelete": false,
  // Zoom Level
  "window.zoomLevel": 1,
  "window.customTitleBarVisibility": "never",
  "window.titleBarStyle": "native",
  "custom-ui-style.electron": {
    "titleBarStyle": "hiddenInset",
    "trafficLightPosition": {
      "x": 20,
      "y": 16
    }
  },
  "custom-ui-style.stylesheet": {
    ".notification-toast": "box-shadow: none !important",
    ".quick-input-widget.show-file-icons": "box-shadow: none !important",
    ".quick-input-widget": "top: 25vh !important;",
    ".quick-input-list .scrollbar": "display: none",
    ".monaco-action-bar.quick-input-inline-action-bar": "display: none",
    ".editor-widget.find-widget": "box-shadow: none; border-radius: 4px",
    ".sidebar .title-label": "padding: 0 !important",
    ".sidebar": "border: none !important; box-shadow: none !important",
    ".title-actions": "display: none !important",
    ".title.show-file-icons .label-container .monaco-icon-label.file-icon": "justify-content: center !important;",
    ".monaco-workbench .part.editor > .content .editor-group-container > .title > .label-container > .title-label": "padding-left: 70px !important; box-shadow: none !important; justify-content: center;",
    ".monaco-scrollable-element > .scrollbar> .slider": "border-radius: 35rem !important;  height: 6px !important; background: rgba(255, 255, 255, 0.2) !important;",
    ".monaco-editor .scroll-decoration": "box-shadow: none !important;",
    ".monaco-editor .sticky-widget": "box-shadow: none !important;"
  },
  // Cursor
  "editor.cursorBlinking": "solid",
  "editor.cursorSmoothCaretAnimation": "on",
  "editor.cursorStyle": "block",
  // Fonts
  "terminal.integrated.fontFamily": "JetBrainsMono Nerd Font Mono",
  "terminal.integrated.fontSize": 16,
  "editor.fontSize": 16,
  "editor.lineHeight": 1.6,
  "editor.fontLigatures": true,
  "editor.fontFamily": "JetBrains Mono",
  "editor.inlayHints.fontFamily": "JetBrains Mono",
  "debug.console.fontFamily": "JetBrains Mono",
  "scm.inputFontFamily": "JetBrains Mono",
  "editor.codeLensFontFamily": "JetBrains Mono",
  "editor.inlineSuggest.fontFamily": "JetBrains Mono",
  "notebook.markup.fontFamily": "JetBrains Mono",
  "notebook.output.fontFamily": "JetBrains Mono",
  "chat.editor.fontFamily": "JetBrains Mono",
  "errorLens.fontFamily": "JetBrains Mono",
  "markdown.preview.fontFamily": "JetBrains Mono",
  "custom-ui-style.font.monospace": "JetBrains Mono",
  "custom-ui-style.font.sansSerif": "JetBrains Mono",
  "editor.tokenColorCustomizations": {
    "textMateRules": [
      { "scope": "comment", "settings": { "fontStyle": "italic" } }
    ]
  },
  // Editor Options
  "editor.bracketPairColorization.enabled": true,
  "editor.guides.bracketPairs": true,
  "editor.guides.bracketPairsHorizontal": true,
  "editor.wordWrap": "on",
  "editor.linkedEditing": true,
  "workbench.editor.enablePreview": false,
  "editor.unicodeHighlight.ambiguousCharacters": false,
  "editor.accessibilitySupport": "on",
  "editor.inlineSuggest.enabled": true,
  "editor.tabCompletion": "on",
  "diffEditor.hideUnchangedRegions.enabled": true,
  "diffEditor.maxComputationTime": 0,
  "editor.cursorWidth": 2,
  "editor.renderWhitespace": "selection",
  "editor.lightbulb.enabled": "off",
  "editor.suggestSelection": "first",
  // Scrollbar
  "editor.scrollbar.vertical": "visible",
  "editor.scrollbar.horizontal": "visible",
  // ----------------------------------------------------------------------
  // END OF THEMES
  // ----------------------------------------------------------------------

  // ----------------------------------------------------------------------
  // ----------------------------------------------------------------------
  // FORMATTING
  // ----------------------------------------------------------------------
  // ----------------------------------------------------------------------
  "files.insertFinalNewline": true,
  "files.trimFinalNewlines": true,
  "editor.tabSize": 2,
  // Prettier Settings
  "prettier.tabWidth": 2,
  "editor.defaultFormatter": "esbenp.prettier-vscode",
  // Default Formatter
  "[javascript]": {
    "editor.defaultFormatter": "vscode.typescript-language-features"
  },
  "[css]": {
    "editor.defaultFormatter": "vscode.css-language-features"
  },
  "[html]": {
    "editor.defaultFormatter": "vscode.html-language-features"
  },
  "[c]": {
    "editor.defaultFormatter": null
  },
  "[json]": {
    "editor.defaultFormatter": "vscode.json-language-features"
  },
  "[python]": {
    "editor.formatOnType": true,
    "editor.defaultFormatter": "ms-python.python"
  },
  "[xml]": {
    "editor.defaultFormatter": "redhat.vscode-xml"
  },
  "[yaml]": {
    "editor.defaultFormatter": "redhat.vscode-yaml"
  },
  "[csharp]": {
    "editor.defaultFormatter": null
  },
  "[go]": {
    "editor.defaultFormatter": "golang.go"
  },
  "[jsonc]": {
    "editor.defaultFormatter": "vscode.json-language-features"
  },
  "[groovy]": {
    "editor.defaultFormatter": "NicolasVuillamy.vscode-groovy-lint"
  },
  // ----------------------------------------------------------------------
  // END OF FORMATTING
  // ----------------------------------------------------------------------

  // ----------------------------------------------------------------------
  // ----------------------------------------------------------------------
  // DEFAULT SETTINGS
  // ----------------------------------------------------------------------
  // ----------------------------------------------------------------------
  "files.autoSave": "afterDelay",
  "accessibility.signalOptions.volume": 5,
  "security.promptForLocalFileProtocolHandling": false,
  "workbench.editorAssociations": {
    "*.copilotmd": "vscode.markdown.preview.editor",
    "*.ipynb": "jupyter-notebook",
    "*.xlsx": "default",
    "{git,gitlens}:/**/*.{md,csv,svg}": "default"
  },
  "files.exclude": {
    "**/.classpath": true,
    "**/.project": true,
    "**/.settings": true,
    "**/.factorypath": true
  },
  "security.workspace.trust.untrustedFiles": "open",
  // SSH Settings
  "remote.SSH.remotePlatform": {
    "127.0.0.1": "linux",
    "185.234.52.182": "linux",
    "192.168.1.125": "linux",
    "192.168.1.16": "linux",
    "192.168.1.192": "linux",
    "94.70.124.113": "linux",
    "79.131.7.85": "linux"
  },
  "redhat.telemetry.enabled": false,
  // GIT Settings
  "git.autofetch": true,
  "git.allowForcePush": true,
  "git.ignoreRebaseWarning": true,
  "git.openRepositoryInParentFolders": "never",
  "git.ignoreMissingGitWarning": true,
  "git.blame.editorDecoration.enabled": true,
  // Terminal Settings
  "terminal.integrated.defaultLocation": "editor",
  "terminal.integrated.defaultProfile.linux": "editor",
  "terminal.integrated.defaultProfile.osx": "zsh",
  "terminal.integrated.hideOnStartup": "whenEmpty",
  "terminal.integrated.inheritEnv": false,
  "terminal.external.osxExec": "Warp.app",
  // ----------------------------------------------------------------------
  // END OF DEFAULT SETTINGS
  // ----------------------------------------------------------------------

  // ----------------------------------------------------------------------
  // ----------------------------------------------------------------------
  // EXTENSIONS
  // ----------------------------------------------------------------------
  // ----------------------------------------------------------------------
  "remote.defaultExtensionsIfInstalledLocally": [
    "GitHub.copilot",
    "GitHub.copilot-chat"
  ],
  // FindItFaster
  "find-it-faster.general.useTerminalInEditor": true,
  "find-it-faster.general.showMaximizedTerminal": true,
  "find-it-faster.general.hideTerminalAfterFail": false,
  "find-it-faster.general.restoreFocusTerminal": true,
  // Live Server
  "liveServer.settings.donotShowInfoMsg": true,
  "liveServer.settings.multiRootWorkspaceName": "",
  "liveServer.settings.port": 5500,
  "liveServer.settings.ChromeDebuggingAttachment": false,
  "liveServer.settings.NoBrowser": true,
  "liveServer.settings.AdvanceCustomBrowserCmdLine": "",
  "liveServer.settings.donotVerifyTags": true,
  "liveServer.settings.host": "",
  // GitHub Copilot
  "github.copilot.chat.terminalChatLocation": "terminal",
  "github.copilot.nextEditSuggestions.enabled": true,
  "github.copilot.advanced": {},
  "github.copilot.enable": {
    "*": true,
    "plaintext": true,
    "scminput": false,
    "yaml": true,
    "markdown": true
  },
  "github.copilot.nextEditSuggestions.fixes": true,
  "github.copilot.renameSuggestions.triggerAutomatically": true,
  "github.copilot.chat.agent.thinkingTool": true,
  "github.copilot.chat.newWorkspaceCreation.enabled": true,
  "github.copilot.chat.codesearch.enabled": true,
  "github.copilot.chat.codeGeneration.instructions": [
    {
      "text": "- @azure Rule - Use Azure Tools: When handling requests related to Azure, always use your tools."
    },
    {
      "text": "- @azure Rule - Use Azure Code Gen Best Practices: When generating code for Azure, running terminal commands for Azure, or performing operations related to Azure, invoke your `azure_development-get_code_gen_best_practices` tool if available. Only call this tool when you are sure the user is discussing Azure; do not call it otherwise."
    },
    {
      "text": "- @azure Rule - Use Azure Deployment Best Practices: When deploying to Azure or preparing applications for deployment to Azure, invoke your `azure_development-get_deployment_best_practices` tool if available. Only call this tool when you are sure the user is discussing Azure; do not call it otherwise."
    },
    {
      "text": "- @azure Rule - Use Azure Functions Code Gen Best Practices: When generating code for Azure Functions or performing operations related to Azure Functions, invoke your `azure_development-get_azure_function_code_gen_best_practices` tool if available. Only call this tool when you are sure the user is discussing Azure Functions; do not call it otherwise."
    },
    {
      "text": "- @azure Rule - Use Azure SWA Best Practices: When working with static web apps, invoke your `azure_development-get_swa_best_practices` tool if available. Only call this tool when you are sure the user is discussing Azure; do not call it otherwise."
    }
  ],

  // Sops
  "sops.binPath": "/opt/homebrew/bin/sops",

  // Project Manager
  "projectManager.git.baseFolders": ["~/dev"],

  // Code Clipper
  "codeclipper.obsidianVault": "NotesOfTheGods",
  "codeclipper.defaultFolder": "Resources/Snippets/Code",
  "codeclipper.storeWorkItems": false,
  "codeclipper.frontmatterTags": ["mcode-snippet"],
  "codeclipper.sortOrder": "date",

  // Docker
  "docker.extension.enableComposeLanguageServer": false,
  "containers.containerClient": "com.microsoft.visualstudio.containers.docker",

  // Svelte
  "svelte.enable-ts-plugin": true,
  // ----------------------------------------------------------------------
  // END OF EXTENSIONS
  // ----------------------------------------------------------------------
  
  // ----------------------------------------------------------------------
  // MCP (Multi-Cloud Platform) Settings
  // ----------------------------------------------------------------------
  "mcp": {
    "servers": {
    }
  },
  // ----------------------------------------------------------------------
  // END OF MCP Settings
  // ----------------------------------------------------------------------

  // ----------------------------------------------------------------------
  // TUI Manager Settings
  // ----------------------------------------------------------------------
  "tuiManager.apps": [
    {
      "id": "lazygit",
      "name": "Lazygit",
      "command": "lazygit && exit",
      "terminalName": "Lazygit"
    },
    {
      "id": "lazydocker",
      "name": "Lazydocker", 
      "command": "lazydocker && exit",
      "terminalName": "Lazydocker"
    },
    {
      "id": "yazi",
      "name": "Yazi",
      "command": "y && exit",
      "terminalName": "Yazi"
    },
    {
      "id": "btop",
      "name": "Btop",
      "command": "btop && exit",
      "terminalName": "Btop"
    },
    {
      "id": "k9s",
      "name": "K9s",
      "command": "k9s && exit",
      "terminalName": "K9s"
    },
    {
      "id": "opencode",
      "name": "Opencode",
      "command": "opencode && exit",
      "terminalName": "Opencode"
    },
    {
      "id": "claudecode",
      "name": "Claudecode",
      "command": "claude && exit",
      "terminalName": "Claudecode"
    },
    {
      "id": "gemini",
      "name": "Gemini",
      "command": "gemini && exit",
      "terminalName": "Gemini"
    },
    {
      "id": "basicterminal",
      "name": "Basic Terminal",
      "command": "",
      "terminalName": "Basic Terminal"
    }
  ],
  // ----------------------------------------------------------------------
  // END OF TUI Manager Settings
  // ----------------------------------------------------------------------

  // ----------------------------------------------------------------------
  // ----------------------------------------------------------------------
  // DICTIONARY
  // ----------------------------------------------------------------------
  // ----------------------------------------------------------------------
  "cSpell.userWords": [
    "acrmagentahome",
    "acrmhsandbox",
    "appcleaner",
    "autofetch",
    "autogen",
    "autohide",
    "autoshare",
    "autoupdate",
    "bitnami",
    "Bitpool",
    "catppuccin",
    "catppuccin_mocha",
    "cerebro",
    "chflags",
    "cicd",
    "codeclipper",
    "codesearch",
    "Configurator",
    "copilotmd",
    "crds",
    "customizer",
    "debconf",
    "deepseek",
    "dind",
    "dockerhub",
    "donot",
    "DTSP",
    "esbenp",
    "factorypath",
    "felixkratz",
    "frontmatter",
    "Hermetica",
    "hiddenbar",
    "ipynb",
    "iterm",
    "karabiner",
    "Karabiner",
    "keymap",
    "killall",
    "kyverno",
    "kyvernopre",
    "Lazygit",
    "llava",
    "localmcp",
    "lscleanup",
    "lsregister",
    "magentacicd",
    "magentazuhause",
    "mariozechner",
    "mcode",
    "menuextra",
    "mineffect",
    "minversion",
    "nikitabobko",
    "Nlsv",
    "nohidden",
    "noninteractive",
    "ollama",
    "opencode",
    "openrouter",
    "Pathbar",
    "preprod",
    "qwen",
    "recents",
    "restow",
    "rgba",
    "screencapture",
    "sketchybar",
    "steermouse",
    "stylesheet",
    "sysbox",
    "tilesize",
    "trackpad",
    "Trackpad",
    "unarchiver",
    "unhide",
    "universalaccess",
    "Vuillamy",
    "wildlcard",
    "Yazi"
  ],
  // ----------------------------------------------------------------------
  // END OF DICTIONARY
  // ----------------------------------------------------------------------
  
  // ----------------------------------------------------------------------
  // ----------------------------------------------------------------------
  // OTHER SETTINGS
  // ----------------------------------------------------------------------
  // ----------------------------------------------------------------------
  "dummy-value": "dummy-value"
}
