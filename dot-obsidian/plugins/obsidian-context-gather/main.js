/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var c=Object.defineProperty;var m=Object.getOwnPropertyDescriptor;var x=Object.getOwnPropertyNames;var C=Object.prototype.hasOwnProperty;var f=(o,s)=>{for(var t in s)c(o,t,{get:s[t],enumerable:!0})},w=(o,s,t,e)=>{if(s&&typeof s=="object"||typeof s=="function")for(let n of x(s))!C.call(o,n)&&n!==t&&c(o,n,{get:()=>s[n],enumerable:!(e=m(s,n))||e.enumerable});return o};var y=o=>w(c({},"__esModule",{value:!0}),o);var T={};f(T,{default:()=>l});module.exports=y(T);var i=require("obsidian"),F={recentFilesLimit:20,showFilePreview:!0,includeBacklinks:!0,includeForwardlinks:!0},l=class extends i.Plugin{constructor(){super(...arguments);this.contextHistory=[]}async onload(){await this.loadSettings(),this.addCommand({id:"gather-context",name:"Gather context",callback:()=>{new h(this.app,this).open()}}),this.addCommand({id:"past-contexts",name:"Past contexts",callback:()=>{new d(this.app,this).open()}}),this.addSettingTab(new u(this.app,this))}onunload(){}async loadSettings(){this.settings=Object.assign({},F,await this.loadData())}async saveSettings(){await this.saveData(this.settings)}saveContextToHistory(t){this.contextHistory.unshift(t),this.contextHistory.length>10&&(this.contextHistory=this.contextHistory.slice(0,10))}formatContextForClipboard(t){return Promise.all(t.map(async e=>{let n=await this.app.vault.read(e.file);return`---
${e.file.name}
---
${n}`})).then(e=>e.join(`
`))}async copyContextToClipboard(t){try{let e=await this.formatContextForClipboard(t);await navigator.clipboard.writeText(e),new i.Notice(`Copied ${t.length} files to clipboard`),this.saveContextToHistory(t)}catch(e){new i.Notice("Failed to copy context to clipboard"),console.error("Clipboard copy failed:",e)}}},h=class extends i.FuzzySuggestModal{constructor(t,e){super(t);this.contextList=[];this.allFiles=[];this.plugin=e,this.setPlaceholder("Type to search files..."),this.setInstructions([{command:"Tab",purpose:"Add to context"},{command:"Enter",purpose:"Copy context to clipboard"},{command:"Esc",purpose:"Close"}])}getItems(){return this.allFiles.length===0&&(this.allFiles=this.app.vault.getMarkdownFiles().sort((t,e)=>e.stat.mtime-t.stat.mtime).slice(0,this.plugin.settings.recentFilesLimit*2)),this.allFiles}getItemText(t){return t.basename}renderSuggestion(t,e){let n=t.item;e.createEl("div",{text:n.basename}),e.createEl("small",{text:n.path,cls:"context-gather-path"}),this.contextList.length>0&&this.renderContextList()}renderContextList(){let t=this.modalEl.querySelector(".context-gather-list");if(t&&t.remove(),this.contextList.length===0)return;let e=this.modalEl.createEl("div",{cls:"context-gather-list"});e.createEl("h4",{text:`Context (${this.contextList.length} files):`});let n=e.createEl("ul");this.contextList.forEach((a,r)=>{let g=n.createEl("li");g.createEl("span",{text:a.file.basename});let p=g.createEl("button",{text:"\xD7",cls:"context-gather-remove"});p.onclick=()=>{this.contextList.splice(r,1),this.renderContextList()}})}async onChooseItem(t,e){if(e instanceof KeyboardEvent&&e.key==="Tab"){e.preventDefault(),this.addToContext(t);return}this.contextList.length>0?(await this.plugin.copyContextToClipboard(this.contextList),this.close()):new i.Notice("No files in context. Use Tab to add files first.")}addToContext(t){if(this.contextList.some(e=>e.file.path===t.path)){new i.Notice(`${t.basename} already in context`);return}this.contextList.push({file:t,addedAt:new Date}),new i.Notice(`Added ${t.basename} to context`),this.renderContextList()}onOpen(){super.onOpen(),this.inputEl.addEventListener("keydown",t=>{if(t.key==="Tab"){t.preventDefault();let e=this.getSelectedItem();e&&this.addToContext(e)}})}getSelectedItem(){let t=this.resultContainerEl.querySelector(".is-selected");if(!t)return null;let e=Array.from(this.resultContainerEl.children).indexOf(t);return this.getItems()[e]||null}},d=class extends i.FuzzySuggestModal{constructor(t,e){super(t);this.plugin=e,this.setPlaceholder("Select a past context to restore...")}getItems(){return this.plugin.contextHistory}getItemText(t){var a;let e=t.map(r=>r.file.basename).join(", "),n=((a=t[0])==null?void 0:a.addedAt.toLocaleString())||"Unknown";return`${t.length} files (${n}): ${e}`}async onChooseItem(t){await this.plugin.copyContextToClipboard(t),this.close()}},u=class extends i.PluginSettingTab{constructor(t,e){super(t,e);this.plugin=e}display(){let{containerEl:t}=this;t.empty(),new i.Setting(t).setName("Recent files limit").setDesc("Maximum number of recent files to show in search").addText(e=>e.setPlaceholder("20").setValue(this.plugin.settings.recentFilesLimit.toString()).onChange(async n=>{let a=parseInt(n);!isNaN(a)&&a>0&&(this.plugin.settings.recentFilesLimit=a,await this.plugin.saveSettings())})),new i.Setting(t).setName("Show file preview").setDesc("Show file content preview in search results").addToggle(e=>e.setValue(this.plugin.settings.showFilePreview).onChange(async n=>{this.plugin.settings.showFilePreview=n,await this.plugin.saveSettings()})),new i.Setting(t).setName("Include backlinks").setDesc("Include backlinked files in context suggestions").addToggle(e=>e.setValue(this.plugin.settings.includeBacklinks).onChange(async n=>{this.plugin.settings.includeBacklinks=n,await this.plugin.saveSettings()})),new i.Setting(t).setName("Include forward links").setDesc("Include forward-linked files in context suggestions").addToggle(e=>e.setValue(this.plugin.settings.includeForwardlinks).onChange(async n=>{this.plugin.settings.includeForwardlinks=n,await this.plugin.saveSettings()}))}};
